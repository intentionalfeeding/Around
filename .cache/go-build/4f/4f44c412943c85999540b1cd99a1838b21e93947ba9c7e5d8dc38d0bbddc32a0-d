
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"reflect"

	"testing"
	"testing/internal/testdeps"


	_test "cloud.google.com/go/storage"


	_xtest "cloud.google.com/go/storage_test"


)

var tests = []testing.InternalTest{

	{"TestSetACL", _test.TestSetACL},

	{"TestToProtoObjectACL", _test.TestToProtoObjectACL},

	{"TestFromProtoToObjectACLRules", _test.TestFromProtoToObjectACLRules},

	{"TestBucketAttrsToRawBucket", _test.TestBucketAttrsToRawBucket},

	{"TestBucketAttrsToUpdateToRawBucket", _test.TestBucketAttrsToUpdateToRawBucket},

	{"TestAgeConditionBackwardCompat", _test.TestAgeConditionBackwardCompat},

	{"TestCallBuilders", _test.TestCallBuilders},

	{"TestNewBucket", _test.TestNewBucket},

	{"TestBucketRetryer", _test.TestBucketRetryer},

	{"TestCreateBucketEmulated", _test.TestCreateBucketEmulated},

	{"TestDeleteBucketEmulated", _test.TestDeleteBucketEmulated},

	{"TestGetBucketEmulated", _test.TestGetBucketEmulated},

	{"TestUpdateBucketEmulated", _test.TestUpdateBucketEmulated},

	{"TestGetServiceAccountEmulated", _test.TestGetServiceAccountEmulated},

	{"TestGetSetTestIamPolicyEmulated", _test.TestGetSetTestIamPolicyEmulated},

	{"TestDeleteObjectEmulated", _test.TestDeleteObjectEmulated},

	{"TestGetObjectEmulated", _test.TestGetObjectEmulated},

	{"TestRewriteObjectEmulated", _test.TestRewriteObjectEmulated},

	{"TestUpdateObjectEmulated", _test.TestUpdateObjectEmulated},

	{"TestListObjectsEmulated", _test.TestListObjectsEmulated},

	{"TestListObjectsWithPrefixEmulated", _test.TestListObjectsWithPrefixEmulated},

	{"TestListBucketsEmulated", _test.TestListBucketsEmulated},

	{"TestListBucketACLsEmulated", _test.TestListBucketACLsEmulated},

	{"TestUpdateBucketACLEmulated", _test.TestUpdateBucketACLEmulated},

	{"TestDeleteBucketACLEmulated", _test.TestDeleteBucketACLEmulated},

	{"TestDefaultObjectACLCRUDEmulated", _test.TestDefaultObjectACLCRUDEmulated},

	{"TestObjectACLCRUDEmulated", _test.TestObjectACLCRUDEmulated},

	{"TestOpenReaderEmulated", _test.TestOpenReaderEmulated},

	{"TestOpenWriterEmulated", _test.TestOpenWriterEmulated},

	{"TestListNotificationsEmulated", _test.TestListNotificationsEmulated},

	{"TestCreateNotificationEmulated", _test.TestCreateNotificationEmulated},

	{"TestDeleteNotificationEmulated", _test.TestDeleteNotificationEmulated},

	{"TestLockBucketRetentionPolicyEmulated", _test.TestLockBucketRetentionPolicyEmulated},

	{"TestComposeEmulated", _test.TestComposeEmulated},

	{"TestHMACKeyCRUDEmulated", _test.TestHMACKeyCRUDEmulated},

	{"TestPostPolicyV4Conformance", _test.TestPostPolicyV4Conformance},

	{"TestSigningV4Conformance", _test.TestSigningV4Conformance},

	{"TestCopyMissingFields", _test.TestCopyMissingFields},

	{"TestCopyBothEncryptionKeys", _test.TestCopyBothEncryptionKeys},

	{"TestHMACKeyHandle_GetParsing", _test.TestHMACKeyHandle_GetParsing},

	{"TestHMACKeyHandle_Get_NotFound", _test.TestHMACKeyHandle_Get_NotFound},

	{"TestHMACKeyHandle_Delete", _test.TestHMACKeyHandle_Delete},

	{"TestHMACKeyHandle_Create", _test.TestHMACKeyHandle_Create},

	{"TestHMACKey_UpdateState", _test.TestHMACKey_UpdateState},

	{"TestHMACKey_ListFull", _test.TestHMACKey_ListFull},

	{"TestHMACKey_List_Options", _test.TestHMACKey_List_Options},

	{"TestIntegration_BucketCreateDelete", _test.TestIntegration_BucketCreateDelete},

	{"TestIntegration_BucketLifecycle", _test.TestIntegration_BucketLifecycle},

	{"TestIntegration_BucketUpdate", _test.TestIntegration_BucketUpdate},

	{"TestIntegration_BucketPolicyOnly", _test.TestIntegration_BucketPolicyOnly},

	{"TestIntegration_UniformBucketLevelAccess", _test.TestIntegration_UniformBucketLevelAccess},

	{"TestIntegration_PublicAccessPrevention", _test.TestIntegration_PublicAccessPrevention},

	{"TestIntegration_ConditionalDelete", _test.TestIntegration_ConditionalDelete},

	{"TestIntegration_ObjectsRangeReader", _test.TestIntegration_ObjectsRangeReader},

	{"TestIntegration_ObjectReadGRPC", _test.TestIntegration_ObjectReadGRPC},

	{"TestIntegration_ObjectReadChunksGRPC", _test.TestIntegration_ObjectReadChunksGRPC},

	{"TestIntegration_ObjectReadRelativeToEndGRPC", _test.TestIntegration_ObjectReadRelativeToEndGRPC},

	{"TestIntegration_ObjectReadPartialContentGRPC", _test.TestIntegration_ObjectReadPartialContentGRPC},

	{"TestIntegration_ConditionalDownloadGRPC", _test.TestIntegration_ConditionalDownloadGRPC},

	{"TestIntegration_SimpleWriteGRPC", _test.TestIntegration_SimpleWriteGRPC},

	{"TestIntegration_CancelWriteGRPC", _test.TestIntegration_CancelWriteGRPC},

	{"TestIntegration_MultiMessageWriteGRPC", _test.TestIntegration_MultiMessageWriteGRPC},

	{"TestIntegration_MultiChunkWriteGRPC", _test.TestIntegration_MultiChunkWriteGRPC},

	{"TestIntegration_ConditionalDownload", _test.TestIntegration_ConditionalDownload},

	{"TestIntegration_Objects", _test.TestIntegration_Objects},

	{"TestIntegration_Encoding", _test.TestIntegration_Encoding},

	{"TestIntegration_SignedURL", _test.TestIntegration_SignedURL},

	{"TestIntegration_SignedURL_WithEncryptionKeys", _test.TestIntegration_SignedURL_WithEncryptionKeys},

	{"TestIntegration_SignedURL_EmptyStringObjectName", _test.TestIntegration_SignedURL_EmptyStringObjectName},

	{"TestIntegration_ACL", _test.TestIntegration_ACL},

	{"TestIntegration_ValidObjectNames", _test.TestIntegration_ValidObjectNames},

	{"TestIntegration_WriterContentType", _test.TestIntegration_WriterContentType},

	{"TestIntegration_ZeroSizedObject", _test.TestIntegration_ZeroSizedObject},

	{"TestIntegration_Encryption", _test.TestIntegration_Encryption},

	{"TestIntegration_NonexistentBucket", _test.TestIntegration_NonexistentBucket},

	{"TestIntegration_PerObjectStorageClass", _test.TestIntegration_PerObjectStorageClass},

	{"TestIntegration_BucketInCopyAttrs", _test.TestIntegration_BucketInCopyAttrs},

	{"TestIntegration_NoUnicodeNormalization", _test.TestIntegration_NoUnicodeNormalization},

	{"TestIntegration_HashesOnUpload", _test.TestIntegration_HashesOnUpload},

	{"TestIntegration_BucketIAM", _test.TestIntegration_BucketIAM},

	{"TestIntegration_RequesterPays", _test.TestIntegration_RequesterPays},

	{"TestIntegration_Notifications", _test.TestIntegration_Notifications},

	{"TestIntegration_PublicBucket", _test.TestIntegration_PublicBucket},

	{"TestIntegration_ReadCRC", _test.TestIntegration_ReadCRC},

	{"TestIntegration_CancelWrite", _test.TestIntegration_CancelWrite},

	{"TestIntegration_UpdateCORS", _test.TestIntegration_UpdateCORS},

	{"TestIntegration_UpdateDefaultEventBasedHold", _test.TestIntegration_UpdateDefaultEventBasedHold},

	{"TestIntegration_UpdateEventBasedHold", _test.TestIntegration_UpdateEventBasedHold},

	{"TestIntegration_UpdateTemporaryHold", _test.TestIntegration_UpdateTemporaryHold},

	{"TestIntegration_UpdateRetentionExpirationTime", _test.TestIntegration_UpdateRetentionExpirationTime},

	{"TestIntegration_CustomTime", _test.TestIntegration_CustomTime},

	{"TestIntegration_UpdateRetentionPolicy", _test.TestIntegration_UpdateRetentionPolicy},

	{"TestIntegration_DeleteObjectInBucketWithRetentionPolicy", _test.TestIntegration_DeleteObjectInBucketWithRetentionPolicy},

	{"TestIntegration_LockBucket", _test.TestIntegration_LockBucket},

	{"TestIntegration_LockBucket_MetagenerationRequired", _test.TestIntegration_LockBucket_MetagenerationRequired},

	{"TestIntegration_KMS", _test.TestIntegration_KMS},

	{"TestIntegration_PredefinedACLs", _test.TestIntegration_PredefinedACLs},

	{"TestIntegration_ServiceAccount", _test.TestIntegration_ServiceAccount},

	{"TestIntegration_ReaderAttrs", _test.TestIntegration_ReaderAttrs},

	{"TestIntegration_ReaderCancel", _test.TestIntegration_ReaderCancel},

	{"TestIntegration_NewReaderWithContentEncodingGzip", _test.TestIntegration_NewReaderWithContentEncodingGzip},

	{"TestIntegration_HMACKey", _test.TestIntegration_HMACKey},

	{"TestIntegration_PostPolicyV4", _test.TestIntegration_PostPolicyV4},

	{"TestIntegration_Scopes", _test.TestIntegration_Scopes},

	{"TestIntegration_SignedURL_Bucket", _test.TestIntegration_SignedURL_Bucket},

	{"TestIntegration_PostPolicyV4_Bucket", _test.TestIntegration_PostPolicyV4_Bucket},

	{"TestIntegration_PostPolicyV4_SignedURL_WithSignBytes", _test.TestIntegration_PostPolicyV4_SignedURL_WithSignBytes},

	{"TestInvoke", _test.TestInvoke},

	{"TestShouldRetry", _test.TestShouldRetry},

	{"TestParseNotificationTopic", _test.TestParseNotificationTopic},

	{"TestConvertNotification", _test.TestConvertNotification},

	{"TestNotificationsToMap", _test.TestNotificationsToMap},

	{"TestAddNotificationsErrors", _test.TestAddNotificationsErrors},

	{"TestIntegration_OCTracing", _test.TestIntegration_OCTracing},

	{"TestPostPolicyV4OptionsClone", _test.TestPostPolicyV4OptionsClone},

	{"TestRangeReader", _test.TestRangeReader},

	{"TestRangeReaderRetry", _test.TestRangeReaderRetry},

	{"TestFakeReadCloser", _test.TestFakeReadCloser},

	{"TestContentEncodingGzipWithReader", _test.TestContentEncodingGzipWithReader},

	{"TestRetryConformance", _test.TestRetryConformance},

	{"TestV2HeaderSanitization", _test.TestV2HeaderSanitization},

	{"TestV4HeaderSanitization", _test.TestV4HeaderSanitization},

	{"TestSignedURLV2", _test.TestSignedURLV2},

	{"TestSignedURLV4", _test.TestSignedURLV4},

	{"TestSignedURL_EmulatorHost", _test.TestSignedURL_EmulatorHost},

	{"TestSignedURL_MissingOptions", _test.TestSignedURL_MissingOptions},

	{"TestPathEncodeV4", _test.TestPathEncodeV4},

	{"TestObjectNames", _test.TestObjectNames},

	{"TestCondition", _test.TestCondition},

	{"TestConditionErrors", _test.TestConditionErrors},

	{"TestObjectRetryer", _test.TestObjectRetryer},

	{"TestClientSetRetry", _test.TestClientSetRetry},

	{"TestRetryer", _test.TestRetryer},

	{"TestObjectCompose", _test.TestObjectCompose},

	{"TestEmptyObjectIterator", _test.TestEmptyObjectIterator},

	{"TestEmptyBucketIterator", _test.TestEmptyBucketIterator},

	{"TestCodecUint32", _test.TestCodecUint32},

	{"TestUserProject", _test.TestUserProject},

	{"TestRawObjectToObjectAttrs", _test.TestRawObjectToObjectAttrs},

	{"TestObjectAttrsToRawObject", _test.TestObjectAttrsToRawObject},

	{"TestProtoObjectToObjectAttrs", _test.TestProtoObjectToObjectAttrs},

	{"TestObjectAttrsToProtoObject", _test.TestObjectAttrsToProtoObject},

	{"TestApplyCondsProto", _test.TestApplyCondsProto},

	{"TestAttrToFieldMapCoverage", _test.TestAttrToFieldMapCoverage},

	{"TestWithEndpoint", _test.TestWithEndpoint},

	{"TestOperationsWithEndpoint", _test.TestOperationsWithEndpoint},

	{"TestSignedURLOptionsClone", _test.TestSignedURLOptionsClone},

	{"TestErrorOnObjectsInsertCall", _test.TestErrorOnObjectsInsertCall},

	{"TestEncryption", _test.TestEncryption},

	{"TestRaceOnCancel", _test.TestRaceOnCancel},

	{"TestCancelDoesNotLeak", _test.TestCancelDoesNotLeak},

	{"TestCloseDoesNotLeak", _test.TestCloseDoesNotLeak},

	{"TestIndefiniteRetries", _xtest.TestIndefiniteRetries},

}

var benchmarks = []testing.InternalBenchmark{

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {
	testdeps.ImportPath = "cloud.google.com/go/storage"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	_test.TestMain(m)
	os.Exit(int(reflect.ValueOf(m).Elem().FieldByName("exitCode").Int()))

}

