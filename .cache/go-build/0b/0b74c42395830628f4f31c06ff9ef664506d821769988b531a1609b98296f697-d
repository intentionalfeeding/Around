
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"


	_test "github.com/gorilla/handlers"



)

var tests = []testing.InternalTest{

	{"TestCleanHost", _test.TestCleanHost},

	{"TestCanonicalHost", _test.TestCanonicalHost},

	{"TestKeepsQueryString", _test.TestKeepsQueryString},

	{"TestBadDomain", _test.TestBadDomain},

	{"TestEmptyHost", _test.TestEmptyHost},

	{"TestHeaderWrites", _test.TestHeaderWrites},

	{"TestCompressHandlerNoCompression", _test.TestCompressHandlerNoCompression},

	{"TestAcceptEncodingIsDropped", _test.TestAcceptEncodingIsDropped},

	{"TestCompressHandlerGzip", _test.TestCompressHandlerGzip},

	{"TestCompressHandlerDeflate", _test.TestCompressHandlerDeflate},

	{"TestCompressHandlerGzipDeflate", _test.TestCompressHandlerGzipDeflate},

	{"TestCompressFile", _test.TestCompressFile},

	{"TestCompressHandlerPreserveInterfaces", _test.TestCompressHandlerPreserveInterfaces},

	{"TestCompressHandlerDoesntInventInterfaces", _test.TestCompressHandlerDoesntInventInterfaces},

	{"TestDefaultCORSHandlerReturnsOk", _test.TestDefaultCORSHandlerReturnsOk},

	{"TestDefaultCORSHandlerReturnsOkWithOrigin", _test.TestDefaultCORSHandlerReturnsOkWithOrigin},

	{"TestCORSHandlerIgnoreOptionsFallsThrough", _test.TestCORSHandlerIgnoreOptionsFallsThrough},

	{"TestCORSHandlerSetsExposedHeaders", _test.TestCORSHandlerSetsExposedHeaders},

	{"TestCORSHandlerUnsetRequestMethodForPreflightBadRequest", _test.TestCORSHandlerUnsetRequestMethodForPreflightBadRequest},

	{"TestCORSHandlerInvalidRequestMethodForPreflightMethodNotAllowed", _test.TestCORSHandlerInvalidRequestMethodForPreflightMethodNotAllowed},

	{"TestCORSHandlerOptionsRequestMustNotBePassedToNextHandler", _test.TestCORSHandlerOptionsRequestMustNotBePassedToNextHandler},

	{"TestCORSHandlerOptionsRequestMustNotBePassedToNextHandlerWithCustomStatusCode", _test.TestCORSHandlerOptionsRequestMustNotBePassedToNextHandlerWithCustomStatusCode},

	{"TestCORSHandlerOptionsRequestMustNotBePassedToNextHandlerWhenOriginNotAllowed", _test.TestCORSHandlerOptionsRequestMustNotBePassedToNextHandlerWhenOriginNotAllowed},

	{"TestCORSHandlerAllowedMethodForPreflight", _test.TestCORSHandlerAllowedMethodForPreflight},

	{"TestCORSHandlerAllowMethodsNotSetForSimpleRequestPreflight", _test.TestCORSHandlerAllowMethodsNotSetForSimpleRequestPreflight},

	{"TestCORSHandlerAllowedHeaderNotSetForSimpleRequestPreflight", _test.TestCORSHandlerAllowedHeaderNotSetForSimpleRequestPreflight},

	{"TestCORSHandlerAllowedHeaderForPreflight", _test.TestCORSHandlerAllowedHeaderForPreflight},

	{"TestCORSHandlerInvalidHeaderForPreflightForbidden", _test.TestCORSHandlerInvalidHeaderForPreflightForbidden},

	{"TestCORSHandlerMaxAgeForPreflight", _test.TestCORSHandlerMaxAgeForPreflight},

	{"TestCORSHandlerAllowedCredentials", _test.TestCORSHandlerAllowedCredentials},

	{"TestCORSHandlerMultipleAllowOriginsSetsVaryHeader", _test.TestCORSHandlerMultipleAllowOriginsSetsVaryHeader},

	{"TestCORSWithMultipleHandlers", _test.TestCORSWithMultipleHandlers},

	{"TestCORSOriginValidatorWithImplicitStar", _test.TestCORSOriginValidatorWithImplicitStar},

	{"TestCORSOriginValidatorWithExplicitStar", _test.TestCORSOriginValidatorWithExplicitStar},

	{"TestCORSAllowStar", _test.TestCORSAllowStar},

	{"TestLoggingHandlerWithPush", _test.TestLoggingHandlerWithPush},

	{"TestCombinedLoggingHandlerWithPush", _test.TestCombinedLoggingHandlerWithPush},

	{"TestMethodHandler", _test.TestMethodHandler},

	{"TestContentTypeHandler", _test.TestContentTypeHandler},

	{"TestHTTPMethodOverride", _test.TestHTTPMethodOverride},

	{"TestMakeLogger", _test.TestMakeLogger},

	{"TestLoggerCleanup", _test.TestLoggerCleanup},

	{"TestLogPathRewrites", _test.TestLogPathRewrites},

	{"TestLogFormatterWriteLog_Scenario1", _test.TestLogFormatterWriteLog_Scenario1},

	{"TestLogFormatterCombinedLog_Scenario1", _test.TestLogFormatterCombinedLog_Scenario1},

	{"TestLogFormatterWriteLog_Scenario2", _test.TestLogFormatterWriteLog_Scenario2},

	{"TestLogFormatterCombinedLog_Scenario2", _test.TestLogFormatterCombinedLog_Scenario2},

	{"TestLogFormatterWriteLog_Scenario3", _test.TestLogFormatterWriteLog_Scenario3},

	{"TestLogFormatterCombinedLog_Scenario3", _test.TestLogFormatterCombinedLog_Scenario3},

	{"TestLogFormatterWriteLog_Scenario4", _test.TestLogFormatterWriteLog_Scenario4},

	{"TestLogFormatterCombinedLog_Scenario5", _test.TestLogFormatterCombinedLog_Scenario5},

	{"TestGetIP", _test.TestGetIP},

	{"TestGetScheme", _test.TestGetScheme},

	{"TestProxyHeaders", _test.TestProxyHeaders},

	{"TestRecoveryLoggerWithDefaultOptions", _test.TestRecoveryLoggerWithDefaultOptions},

	{"TestRecoveryLoggerWithCustomLogger", _test.TestRecoveryLoggerWithCustomLogger},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkWriteLog", _test.BenchmarkWriteLog},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {
	testdeps.ImportPath = "github.com/gorilla/handlers"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

