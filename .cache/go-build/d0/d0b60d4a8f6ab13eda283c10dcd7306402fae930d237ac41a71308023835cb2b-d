
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"


	_ "gopkg.in/yaml.v2"


	_xtest "gopkg.in/yaml.v2_test"


)

var tests = []testing.InternalTest{

	{"Test", _xtest.Test},

}

var benchmarks = []testing.InternalBenchmark{

	{"Benchmark1000KB100Aliases", _xtest.Benchmark1000KB100Aliases},

	{"Benchmark1000KBDeeplyNestedSlices", _xtest.Benchmark1000KBDeeplyNestedSlices},

	{"Benchmark1000KBDeeplyNestedMaps", _xtest.Benchmark1000KBDeeplyNestedMaps},

	{"Benchmark1000KBDeeplyNestedIndents", _xtest.Benchmark1000KBDeeplyNestedIndents},

	{"Benchmark1000KB1000IndentLines", _xtest.Benchmark1000KB1000IndentLines},

	{"Benchmark1KBMaps", _xtest.Benchmark1KBMaps},

	{"Benchmark10KBMaps", _xtest.Benchmark10KBMaps},

	{"Benchmark100KBMaps", _xtest.Benchmark100KBMaps},

	{"Benchmark1000KBMaps", _xtest.Benchmark1000KBMaps},

	{"BenchmarkDeepSlice", _xtest.BenchmarkDeepSlice},

	{"BenchmarkDeepFlow", _xtest.BenchmarkDeepFlow},

	{"Benchmark1000KBMaxDepthNested", _xtest.Benchmark1000KBMaxDepthNested},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleUnmarshal_embedded", _xtest.ExampleUnmarshal_embedded, "a string from struct A\na string from struct B\n", false},

}

func init() {
	testdeps.ImportPath = "gopkg.in/yaml.v2"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

